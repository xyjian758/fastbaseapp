apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId  rootProject.ext.android.applicationId
        minSdkVersion  rootProject.ext.android.minSdkVersion
        targetSdkVersion  rootProject.ext.android.targetSdkVersion
        versionCode  rootProject.ext.android.versionCode
        versionName  rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true // add this to enable multi-dex
        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters "armeabi-v7a", "x86"  //, "armeabi-v7a", "arm64-v8a", "x86","arm64-v8a","x86_64"
        }
    }


    dexOptions {
        maxProcessCount 4 // this is the default value
        javaMaxHeapSize "4g"

    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    signingConfigs {

//        debug {
//            storeFile file("qtfm.jks") //签名文件路径
//            storePassword "qtfm123456"
//            keyAlias "qtfm"
//            keyPassword "qtfm123456" //签名密码
//        }
        release {
            storeFile file("qtfm.jks") //签名文件路径
            storePassword "qtfm123456"
            keyAlias "qtfm"
            keyPassword "qtfm123456" //签名密码
        }
    }

    buildTypes {
        release {
            minifyEnabled false //true 打开混淆 false 关闭混淆
            shrinkResources false //true 打开资源压缩 false 关闭资源压缩
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            android.applicationVariants.all { variant ->
                variant.outputs.all {
//                    outputFileName = "qtfm_v${defaultConfig.versionName}_${variant.productFlavors[0].name}.apk"
                    outputFileName = "qtfm_v${defaultConfig.versionName}.apk"
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    //里面包含了 coord
    implementation(rootProject.ext.dependencies.permission) {
        exclude group: 'com.android.support'
    }
    implementation rootProject.ext.dependencies.tkrefreshlayout
    implementation rootProject.ext.dependencies.bgaBanner
    implementation rootProject.ext.dependencies.bgaAdapter
    implementation rootProject.ext.dependencies.fragmentation
    implementation rootProject.ext.dependencies.glide
    implementation rootProject.ext.dependencies.glideokhttp
    implementation(rootProject.ext.dependencies.ucrop) {
        exclude group: 'com.android.support'
    }
    //里面包含了 design recycleview cardview
    implementation(rootProject.ext.dependencies.album) {
        exclude group: 'com.android.support'
    }
    implementation rootProject.ext.dependencies.gson
    implementation rootProject.ext.dependencies.retrofit2
    implementation rootProject.ext.dependencies.retrofit2ConverterGson
    implementation rootProject.ext.dependencies.retrofit2Adapter
    implementation rootProject.ext.dependencies.rxjava2
    implementation rootProject.ext.dependencies.rxandroid
    implementation rootProject.ext.dependencies.okhttp3
    implementation rootProject.ext.dependencies.appcompatv7
    implementation rootProject.ext.dependencies.design
    implementation rootProject.ext.dependencies.cardview
    implementation rootProject.ext.dependencies.recyclerview
    implementation rootProject.ext.dependencies.eventbus
    implementation rootProject.ext.dependencies.butterknife
    annotationProcessor rootProject.ext.dependencies.butterknifeCompiler
}
